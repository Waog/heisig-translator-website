# This is a basic workflow to help you get started with Actions

name: Deploy to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-deploy"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Cache npm dependencies
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Install Angular CLI
      - name: Install Angular CLI
        run: npm install -g @angular/cli

      # Build the project
      - name: Build project
        run: ng build --configuration production --base-href "/heisig-translator-website/"

      # List files in dist directory for debugging
      - name: List files
        run: ls -alh dist/heisig-translator-website

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        run: npx angular-cli-ghpages --dir=dist/heisig-translator-website

      # Uncomment the following line to deploy using personal access token if required
      # env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
